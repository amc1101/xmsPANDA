runApp('panda_app.R')
runApp('panda_app.R')
getwd()
library(shiny)
# Define UI for data upload app ----
ui <- fluidPage(
# App title ----
titlePanel("xmsPANDA"),
# Sidebar layout with input and output definitions ----
#sidebarLayout(
# Sidebar panel for inputs ----
# sidebarPanel(
# Input: Select a file ----
navlistPanel(
"Input parameters",
tabPanel("Input files",
fluidRow(
column(12,h4("Select input files:"),
fileInput("feature_table_file", "Choose feature table file",
multiple = TRUE,
accept = c("text/csv",
"text/comma-separated-values,text/plain",
".txt")),
# Horizontal line ----
fileInput("class_labels_file", "Choose class labels file",
multiple = TRUE,
accept = c("text/csv",
"text/comma-separated-values,text/plain",
".txt"))
))
),
tabPanel("Replicate summarization",
fluidRow(
column(12,h4("Replicate summarization arguments:"),
numericInput('replicates', 'Number of technical replicates', 3,min=1,max=1000),
radioButtons("summarize.replicates", "Should the replicates be summarized?",
choices = c(True = "TRUE",
False = "FALSE"),
selected = "TRUE"),
selectInput("summary.method","Choose a replicate summarization method",
c("mean","median")),
numericInput('rep.max.missing.thresh',
'Maximum allowable technical replicates (ratio) with missing values',
0.5,min=0,max=1)
))
),
tabPanel("Data filtering",fluidRow(
column(12,h4("Data filtering arguments:"),
numericInput('all.missing.thresh',
'Minimum number of samples in which a non-missing signal value should be present',
0.5,min=0,max=1,step=0.1),
numericInput('group.missing.thresh',
'Minimum number of samples in at least one group in which a non-missing signal value should be present',
0.8,min=0,max=1,step=0.1),
numericInput('rsd.filt.list',
'Minimum relative standard deviation across all samples',
0,min=0,max=100,step=1)
))
),
tabPanel("Data imputation, transformation and normalization",fluidRow(
column(12,h4("Data imputation, transformation and normalization arguments:"),
selectInput("summary.na.replacement","Choose an imputation method",
c("halffeaturemin","halfdatamin","halfsamplemin")),
checkboxInput("log2transform", "Log2 transformation", TRUE),
checkboxInput("medcenter", "Median centering", FALSE),
checkboxInput("znormtransform", "Auto-scaling", FALSE),
checkboxInput("quantile_norm", "Quantile normalization", TRUE)
))
),
tabPanel("Statistical analysis and biomarker discovery workflow (simple)",fluidRow(
column(12,h4("Feature selection arguments:"),
selectInput("featselmethod","Choose a feature selection method",
c("limma","lm1wayanova","lmreg","wilcox","logitreg",
"rfesvm","RF","pls","spls","o1pls",
"limma2way","lm2wayanova","spls2way",
"limma1wayrepeat","lm1wayanovarepeat","spls1wayrepeat",
"limma2wayrepeat","lm2wayanovarepeat","spls2wayrepeat")),
submitButton("Start processing") #, icon("refresh"))
))
)
),
# Main panel for displaying outputs ----
mainPanel(
# Output: Data file ----
tableOutput("contents")
)
)
# Define server logic to read selected file ----
server <- function(input, output) {
output$contents <- renderTable({
# input$file1 will be NULL initially. After the user selects
# and uploads a file, head of that data file by default,
# or all rows if selected, will be shown.
req(input$feature_table_file)
req(input$class_labels_file)
df1 <- read.table(input$feature_table_file$datapath,
header = TRUE,
sep = "\t")
df2 <- read.table(input$class_labels_file$datapath,
header = TRUE,
sep = "\t")
feature_table_file<-input$feature_table_file$datapath
class_labels_file<-input$class_labels_file$datapath
#classlabels_mat_balf_confounders_allreps_n63.txt"
#outloc<-"/Users/karanuppal/Documents/Emory/JonesLab/Projects/AnnetteEsper/ARDS/Aug2016/BAL-selected/xcms/pw530_pw1060/plslimmavip1.5p0.05ALIfc0log2quantall0.5group0.9rep0.5_finalv21pngraw/"
outloc<-"/Users/karanuppal/testshiny/" #getwd()
library(xmsPANDA)
source("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/xmsPANDA_v1.0.6.21.R")
demetabs_plsres<-diffexp(feature_table_file=feature_table_file,
parentoutput_dir=outloc,
class_labels_file=class_labels_file,
num_replicates = 3,
feat.filt.thresh =NA, summarize.replicates =TRUE, summary.method="median",summary.na.replacement="halffeaturemin",
rep.max.missing.thresh=0.5,
all.missing.thresh=0.5, group.missing.thresh=0.9, input.intensity.scale="raw",
log2transform = FALSE, medcenter=FALSE, znormtransform = FALSE,
quantile_norm = TRUE, lowess_norm = FALSE, madscaling = FALSE,
rsd.filt.list = c(1), pairedanalysis = FALSE, featselmethod=c("pls","limma"),
fdrthresh = 0.05, fdrmethod="none",cor.method="spearman", abs.cor.thresh = 0.4, cor.fdrthresh=0.2,
kfold=5,feat_weight=1,globalcor=FALSE,target.metab.file=NA,
target.mzmatch.diff=10,target.rtmatch.diff=NA,max.cor.num=NA,missing.val=0,networktype="complete",
samplermindex=NA,numtrees=1000,analysismode="classification",net_node_colors=c("green","red"),
net_legend=FALSE,heatmap.col.opt="RdBu",manhattanplot.col.opt=c("darkblue","red3"),boxplot.col.opt=c("grey57"),sample.col.opt="rainbow",alphacol=0.3, pls_vip_thresh = 1.5, num_nodes = 2,
max_varsel = 100, pls_ncomp = 5,pcacenter=TRUE,pcascale=TRUE,pred.eval.method="BER",rocfeatlist=seq(2,10,1),
rocfeatincrement=TRUE,
rocclassifier="svm",foldchangethresh=0,wgcnarsdthresh=30,WGCNAmodules=FALSE,
optselect=TRUE,max_comp_sel=1,saveRda=FALSE,pca.cex.val=4,pls.permut.count=100,
pca.ellipse=TRUE,ellipse.conf.level=0.95,legendlocation="bottomleft",svm.acc.tolerance=5,limmadecideTests=TRUE,pls.vip.selection="max",globalclustering=FALSE,plots.res=600,plots.width=8,plots.height=8,plots.type="cairo",output.device.type="png",pvalue.thresh=0.05)
#   print(head(df1))
#  print(br)
# print(head(df2))
#  return(output$featselmethod)
})
}
# Create Shiny app ----
shinyApp(ui, server)
library(xmsPANDA)
install.packages("ggplot2")
runApp('panda_app.R')
runApp('panda_app.R')
runApp('panda_app.R')
runApp('panda_app.R')
runApp('panda_app.R')
library(xmsPANDA)
install.packages("ggplot2")
library(xmsPANDA)
install.packages("ggplot2",dependencies=TRUE)
library(xmsPANDA)
library(rsconnect)
rsconnect::deployApp('/Users/karanuppal/Rscripts/xmsPANDA/')
library(rsconnect)
rsconnect::deployApp('/Users/karanuppal/Rscripts/xmsPANDA/')
library(rsconnect)
rsconnect::deployApp('/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/app/')
library(rsconnect)
rsconnect::deployApp('/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/xmsPANDAv1.0.7/')
library(datasets)
#
to
include
a
few
provided
datasets
e
.
g
.
mtcars
mtcars
#
should
print
the
dataframe
with
rows
as
cars
and
columns
as
specs
plot(x=mtcars$wt, y=mtcars$mpg)
source("https://bioconductor.org/biocLite.R");
biocLite(c("GO.db","graph","RBGL","impute","preprocessCore"),dependencies=TRUE);
library(xml)
library
install.packages("XML")
---
title: "Title"
author: "Author"
date: "03/09/2017"
output:
html_document
---
```{r setup, include=FALSE}
options(bitmapType = 'cairo')
```{r simulate_data}
x <- rnorm(100)
y <- 2*x + rnorm(100)
---
title: "Title"
author: "Author"
date: "03/09/2017"
output: html_document
---
```{r setup, include=FALSE}
```{r simulate_data}
x <- rnorm(100)
y <- 2*x + rnorm(100)
---
title: "Title"
author: "Author"
date: "03/09/2017"
output: html_document
---
```{r include=FALSE}
```{r simulate_data}
x <- rnorm(100)
y <- 2*x + rnorm(100)
library(rmarkdown)
---
title: "Title"
author: "Author"
date: "03/09/2017"
output: html_document
---
```{r include=FALSE}
```{r simulate_data}
x <- rnorm(100)
y <- 2*x + rnorm(100)
---
title: "Title"
author: "Author"
date: "03/09/2017"
output: html_document
---
```{r include=FALSE}
library(rmarkdown)
```{r simulate_data}
x <- rnorm(100)
y <- 2*x + rnorm(100)
fit = lm(dist ~ speed, data = cars)
b   = coef(fit)
plot(cars)
abline(fit)
fit = lm(dist ~ speed, data = cars)
b   = coef(fit)
plot(cars)
abline(fit)
fit = lm(dist ~ speed, data = cars)
b   = coef(fit)
plot(cars)
abline(fit)
getwd()
library(devtools);install_github("kuppal2/xmsPANDA")
library(xmsPANDA)
runApp.xmsPANDA()
library(devtools);install_github("kuppal2/xmsPANDA")
runApp.xmsPANDA()
library(xmsPANDA)
runApp.xmsPANDA()
q()
library(devtools);install_github("kuppal2/xmsPANDA")
library(xmsPANDA)
runApp.xmsPANDA()
library(devtools);install_github("kuppal2/xmsPANDA")
library(xmsPANDA)
runApp.xmsPANDA()
install.packages("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA_1.3.1 2.tar.gz",type="source",repos=NULL)
#load xmsPANDA
library(xmsPANDA)
#source("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/xmsPANDA_v1.0.8.63.R")
#source("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/source_codes/xmsPANDA_v1.0.9.32.R")
#change the input and output locations
feature_table_file<-"/Users/karanuppal/Desktop/H1N1/exh1n1_metabolome.txt"
class_labels_file<-"/Users/karanuppal/Desktop/H1N1/exh1n1_classlabels.txt"
outloc<-"/Users/karanuppal/Desktop/H1N1/testlog2knnv1.3.1.0317/"
Xmat<-read.table(feature_table_file,sep="\t",header=TRUE,stringsAsFactors = FALSE,check.names = FALSE)
Ymat<-read.table(class_labels_file,sep="\t",header=TRUE,stringsAsFactors = FALSE,check.names = FALSE)
demetabs_reslite<-diffexp.lite(Xmat=Xmat,Ymat=Ymat,outloc=outloc)
install.packages("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA_1.3.1.tgz")
install.packages("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA_1.3.1.tgz",type="source",repos=NULL)
library(xmsPANDA)
install.packages("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA_1.3.1.tgz",type="source",repos=NULL)
library(xmsPANDA)
runApp.xmsPANDALite()
install.packages("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA_1.3.1.tgz",type="source",repos=NULL)
library(xmsPANDA)
runApp.xmsPANDALite()
runApp.xmsPANDA()
install.packages("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA_1.3.1.tgz",type="source",repos=NULL)
library(xmsPANDA)
runApp.xmsPANDA()
library(rsconnect)
library(BiocManager)
#options(repos = BiocManager::repositories())
rsconnect::setAccountInfo(name='xmspanda',
token='0492CD9EF3AF1641EF4054765EAE011B',
secret='ps7SjDqKcnqCt7qBe7bg2GZ21otkhLXr14mWdFSx')
options("repos" = c("CRAN" = "https://cran.rstudio.com", "BioConductor"=BiocManager::repositories(),"GitHub"="https://github.com/kuppal2/xmsPANDA"))
deployApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite",appName="xmsPANDALite",account="xmspanda")
library(rsconnect)
library(BiocManager)
options(repos = BiocManager::repositories())
rsconnect::setAccountInfo(name='xmspanda',
token='0492CD9EF3AF1641EF4054765EAE011B',
secret='ps7SjDqKcnqCt7qBe7bg2GZ21otkhLXr14mWdFSx')
#options("repos" = c("CRAN" = "https://cran.rstudio.com", #”BioConductor"=BiocManager::repositories(),"GitHub"="https://github.com/kuppal2/xmsPANDA"))
deployApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite",appName="xmsPANDALite",account="xmspanda")
library(devtools);install_github("kuppal2/xmsPANDA")
library(devtools);install_github("kuppal2/xmsPANDA",force=TRUE)
library(xmsPANDA)
library(rsconnect)
library(BiocManager)
options(repos = BiocManager::repositories())
rsconnect::setAccountInfo(name='xmspanda',
token='0492CD9EF3AF1641EF4054765EAE011B',
secret='ps7SjDqKcnqCt7qBe7bg2GZ21otkhLXr14mWdFSx')
#options("repos" = c("CRAN" = "https://cran.rstudio.com", #”BioConductor"=BiocManager::repositories(),"GitHub"="https://github.com/kuppal2/xmsPANDA"))
deployApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite",appName="xmsPANDALite",account="xmspanda")
appDependencies("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
packrat::clean()
packrat::snapshot()
library(devtools);install_github("kuppal2/xmsPANDA")
library(devtools);install_github("kuppal2/xmsPANDA")
library(devtools);install_github("kuppal2/xmsPANDA")
library(devtools);install_github("kuppal2/xmsPANDA")
library(xmsPANDA)
library(rsconnect)
library(BiocManager)
options(repos = BiocManager::repositories())
rsconnect::setAccountInfo(name='xmspanda',
token='0492CD9EF3AF1641EF4054765EAE011B',
secret='ps7SjDqKcnqCt7qBe7bg2GZ21otkhLXr14mWdFSx')
#options("repos" = c("CRAN" = "https://cran.rstudio.com", #”BioConductor"=BiocManager::repositories(),"GitHub"="https://github.com/kuppal2/xmsPANDA"))
deployApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite",appName="xmsPANDALite",account="xmspanda")
library(igraph)
library(devtools);install_github("kuppal2/xmsPANDA")
library(xmsPANDA)
library(rsconnect)
library(BiocManager)
options(repos = BiocManager::repositories())
rsconnect::setAccountInfo(name='xmspanda',
token='0492CD9EF3AF1641EF4054765EAE011B',
secret='ps7SjDqKcnqCt7qBe7bg2GZ21otkhLXr14mWdFSx')
#options("repos" = c("CRAN" = "https://cran.rstudio.com", #”BioConductor"=BiocManager::repositories(),"GitHub"="https://github.com/kuppal2/xmsPANDA"))
deployApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite",appName="xmsPANDALite",account="xmspanda")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
library(shiny)
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
library(devtools);install_github("kuppal2/xmsPANDA")
library(xmsPANDA)
library(rsconnect)
library(BiocManager)
options(repos = BiocManager::repositories())
rsconnect::setAccountInfo(name='xmspanda',
token='0492CD9EF3AF1641EF4054765EAE011B',
secret='ps7SjDqKcnqCt7qBe7bg2GZ21otkhLXr14mWdFSx')
#options("repos" = c("CRAN" = "https://cran.rstudio.com", #”BioConductor"=BiocManager::repositories(),"GitHub"="https://github.com/kuppal2/xmsPANDA"))
deployApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite",appName="xmsPANDALite",account="xmspanda")
runApp("App("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite"")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("App("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite"")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
data(exh1n1)
feature_table_file<-"/Users/karanuppal/Desktop/H1N1/exh1n1_metabolome.txt"
class_labels_file<-"/Users/karanuppal/Desktop/H1N1/exh1n1_classlabels.txt"
outloc<-"/Users/karanuppal/Desktop/H1N1/testlog2knnv1.3.1.0317/"
Xmat<-read.table(feature_table_file,sep="\t",header=TRUE,stringsAsFactors = FALSE,check.names = FALSE)
Ymat<-read.table(class_labels_file,sep="\t",header=TRUE,stringsAsFactors = FALSE,check.names = FALSE)
exh1n1=new("list")
exh1n1$Xmat<-Xmat
exh1n1$Ymat<-Ymat
save(exh1n1,file="/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/data/exh1n1.Rda")
rm(exh1n1$Xmat)
exh1n1$Xmat<-{}
exh1n1$Xmat<-{}
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
load("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/data/exh1n1.Rda")
classlabel=exh1n1$Ymat
head(classlabel)
featuretable=exh1n1$Xmat
head(featuretable)
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
library(devtools);install_github("kuppal2/xmsPANDA")
library(xmsPANDA)
library(rsconnect)
library(BiocManager)
options(repos = BiocManager::repositories())
rsconnect::setAccountInfo(name='xmspanda',
token='0492CD9EF3AF1641EF4054765EAE011B',
secret='ps7SjDqKcnqCt7qBe7bg2GZ21otkhLXr14mWdFSx')
#options("repos" = c("CRAN" = "https://cran.rstudio.com", #”BioConductor"=BiocManager::repositories(),"GitHub"="https://github.com/kuppal2/xmsPANDA"))
deployApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite",appName="xmsPANDALite",account="xmspanda")
library(devtools);install_github("kuppal2/xmsPANDA")
library(xmsPANDA)
data(exh1n1)
load("
plotDendroAndColors(f1,mycl_metabs,rowText = mycl_metabs,groupLabels = c("Cluster"),
rowTextAlignment = "center",
dendroLabels = rownames(f1),
main=paste("Cluster dendrogram for features\n Adjusted Rand Index:",ari_val,sep=""))
")
")"
load("/Users/karanuppal/xmsPANDAnormresults20210326172436/log2quantilenorm/pcares.Rda")
#cluster features
x=pcares$X
#row samples; column: features
dist1<-as.dist(1-WGCNA::cor(x))
f1=fastcluster::hclust(d=dist1,method = "complete")
mycl_metabs <-cutreeDynamic(f1,distM=as.matrix((1-WGCNA::cor(x))),method="hybrid",cutHeight = 0.95,
deepSplit = 4,minClusterSize = 2,verbose = FALSE)
names(mycl_metabs)<-f1$labels
library(WGCNA)
library(fastcluster)
library(dynamicTreeCut)
pdf("hca1.pdf")
plotDendroAndColors(f1,mycl_metabs,rowText = mycl_metabs,groupLabels = c("Cluster"),
rowTextAlignment = "center",
dendroLabels = rownames(f1),
main=paste("Cluster dendrogram for features\n Adjusted Rand Index:",ari_val,sep=""))
x=pcares$X
#row samples; column: features
dist1<-as.dist(1-WGCNA::cor(x))
f1=fastcluster::hclust(d=dist1,method = "complete")
mycl_metabs <-cutreeDynamic(f1,distM=as.matrix((1-WGCNA::cor(x))),method="hybrid",cutHeight = 0.95,
deepSplit = 4,minClusterSize = 2,verbose = FALSE)
names(mycl_metabs)<-f1$labels
plotDendroAndColors(f1,mycl_metabs,rowText = mycl_metabs,groupLabels = c("Cluster"),
rowTextAlignment = "center",
dendroLabels = rownames(f1),
main=paste("Cluster dendrogram for features\n Adjusted Rand Index:",ari_val,sep=""))
ari_val=1
dev.off()
pdf("hc1.pdf")
plotDendroAndColors(f1,mycl_metabs,rowText = mycl_metabs,groupLabels = c("Cluster"),
rowTextAlignment = "center",
dendroLabels = rownames(f1),
main=paste("Cluster dendrogram for features\n Adjusted Rand Index:",ari_val,sep=""))
dev.off()
getwd()
plotDendroAndColors(f1,mycl_metabs,rowText = mycl_metabs,groupLabels = c("Cluster"),
rowTextAlignment = "center",
# dendroLabels = rownames(f1),
main=paste("Cluster dendrogram for features\n Adjusted Rand Index:",ari_val,sep=""))
table(mycl_metabs)
library(devtools);install_github("kuppal2/xmsPANDA")
library(rsconnect)
library(BiocManager)
options(repos = BiocManager::repositories())
rsconnect::setAccountInfo(name='xmspanda',
token='0492CD9EF3AF1641EF4054765EAE011B',
secret='ps7SjDqKcnqCt7qBe7bg2GZ21otkhLXr14mWdFSx')
#options("repos" = c("CRAN" = "https://cran.rstudio.com", #”BioConductor"=BiocManager::repositories(),"GitHub"="https://github.com/kuppal2/xmsPANDA"))
deployApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite",appName="xmsPANDALite",account="xmspanda")
library(devtools);install_github("kuppal2/xmsPANDA")
library(devtools);install_github("kuppal2/xmsPANDA",force=TRUE)
library(shiny)
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
library(shiny)
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
library(shiny)
library(shiny)
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
library(shiny)
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
library(shiny)
runApp("/Users/karanuppal/Documents/Emory/JonesLab/Projects/DifferentialExpression/xmsPaNDA/git-current/xmsPANDA/inst/shinyappLite")
